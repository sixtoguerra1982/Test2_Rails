c
Task.where("user_id=#{current_user.id}").where("historie_id=#{params[:histories_id]}").first
c
Task.where("user_id=#{current_user.id}").where("historie_id=#{params[:histories_id]}").first
Task.where("user_id=#{params[:user_id]}").where("historie_id=#{params[:histories_id]}").first
c
Task.where("user_id=#{params[:user_id]}").where("historie_id=#{params[:histories_id]}").first
Task.where("user_id=#{params[:user_id]}").where("historie_id=#{params[:histories_id]}")
params[:histories_id]
params[:user_id]
c
Task.where("user_id=#{user.id}").where("historie_id=#{user.id}")
c
Task.where("user_id=#{user.id}").where("historie_id=#{user.id}")
c
Task.where("user_id=#{user.id}").where("historie_id=#{user.id}")
c
@task.count == 0
Task.where("user_id=#{user.id}").where("historie_id=#{user.id}")
c
Task.where("user_id=#{user.id}").where("historie_id=#{user.id}").count
Task.where("user_id=#{user.id}").where("historie_id=#{user.id}")
c
Task.where("user_id=#{user.id}").where("historie_id=#{user.id}")
c
 Task.where("user_id=#{user.id}").where("historie_id=#{user.id}")
c
Task.where("user_id = user.id").where("historie_id = historie.id").new
j = Task.where("user_id = 1").where("historie_id = 1").count
j.count
j = Task.where("user_id = 1").where("historie_id = 1").first.user_id
Task.where("user_id = 1").where("historie_id = 1").first.user_id
Task.where("user_id = 1").where("historie_id = 1").user_id
Task.where("user_id = 1").where("historie_id = 1")
Task.where("user_id = 1").where("historie_id = 1").first.count
Task.where("user_id = 1").where("historie_id = 1").first
Task.where("user_id = 1").where("historie_id = 1")
Task.where("user_id = 1").where("historie_id = 1").new
Task.where("user_id = 1").where("historie_id = 1").new.count
Task.where("user_id = user.id").where("historie_id = historie.id").new.count
Task.where("user_id = user.id").where("historie_id = historie.id").new
historie.id
user.id
existe
existe.method
c
Task.where("user_id=user.id").where("historie_id=historie.id")
Task.where(user_id=user.id).where(historie_id=historie.id)
historie.id
user.id
Task.where("user_id=1").where("historie_id = 2")
Task.where("user_id=1")
c
Task.create(user_id: params[:user_id].to_i, historie_id: params[:histories_id].to_i, state: params[:state])
c
Task.where(user_id: '1', historie_id: '1').count
Task.where(user_id: '1' & historie_id: '1').count
Task.where(user_id: '1' and historie_id: '1').count
Task.where(user_id: '1').count
Task.where(user_id: '1')
Task.find(params[:user_id]).count
c
Task.create(user_id: params[:user_id].to_i, histories_id: params[:histories_id].to_i, state: params[:state]).errors
Task.create(user_id: params[:user_id].to_i, histories_id: params[:histories_id].to_i, state: params[:state])
c
Task.create(user_id: params[:user_id].to_i, histories_id: params[:histories_id].to_i, state: params[:state]).errors
c
Task.create(user_id: params[:user_id].to_i, histories_id: params[:histories_id].to_i, state: params[:state])
belongs_to :user
c
Task.create(user_id: params[:user_id].to_i, histories_id: params[:histories_id].to_i, state: params[:state]).errors
c
Task.create(user_id: params[:user_id].to_i, histories_id: params[:histories_id].to_i, state: params[:state])
c
Task.create(user_id: params[:user_id].to_i, histories_id: params[:histories_id].to_i, state: params[:state]).errors
Task.create(user_id: params[:user_id].to_i, histories_id: params[:histories_id].to_i, state: params[:state]).erros
Task.create(user_id: params[:user_id].to_i, histories_id: params[:histories_id].to_i, state: params[:state]).errros
Task.create(user_id: params[:user_id].to_i, histories_id: params[:histories_id].to_i, state: params[:state])
c
Task.create(user_id: params[:user_id].to_i, histories_id: params[:histories_id].to_i, state: params[:state]).errors
Task.create(user_id: params[:user_id].to_i, histories_id: params[:histories_id].to_i, state: params[:state])
c
Task.create(user_id: params[:user_id].to_i, histories_id: params[:histories_id].to_i, state: params[:state]).errors
Task.create(user_id: params[:user_id].to_i, histories_id: params[:histories_id].to_i, state: params[:state])
c
Task.create(user_id: params[:user_id].to_i, histories_id: params[:histories_id].to_i, state: params[:state]).errors
Task.create(user_id: params[:user_id].to_i, histories_id: params[:histories_id].to_i, state: params[:state])
